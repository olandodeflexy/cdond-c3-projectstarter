version: 2.1


jobs:
  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Build front-end
          command: |
              cd frontend
              npm install
              npm run build
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build

  build-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Back-end build
          command: |
              cd backend
              npm install
              npm run build
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build

  test-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Front-end test
          command: |
              cd frontend
              npm install
              npm run test
    
  test-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Back-end test
          command: |
              cd backend
              npm install
              npm run test
      # Checkout code from git
      # Restore from cache
      # Your job code here

  scan-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run: 
          name: Analyze Front-end
          command: |
              cd frontend
              npm install
              npm update moment --depth 1
              npm update eventsource --depth 3
              npm update cheerio --depth 2
              npm update jsprim --depth 12
              npm update tmpl --depth 15
              npm update ansi-regex --depth 15
              npm update y18n --depth 10
              npm update react-popper --depth 2
              npm update lodash.template --depth 3
              npm update mixin-deep --depth 20
              npm update lodash --depth 17
              npm update websocket-extensions --depth 5 
              npm update kind-of --depth 23
              npm update terser-webpack-plugin --depth 2
              npm update http-proxy --depth 3 
              npm update yargs-parser --depth 3
              npm update ini --depth 6
              npm update elliptic --depth 5
              npm update ssri --depth 4 
              npm update ua-parser-js --depth 5
              npm update hosted-git-info --depth 16
              npm update ajv --depth 4 
              npm update handlebars --depth 6 
              npm update browserslist --depth 3 
              npm update dns-packet --depth 4
              npm update postcss --depth 4
              npm update path-parse --depth 17
              npm update follow-redirects --depth 4 
              npm update jest-cli --depth 2 
              npm update mkdirp --depth 3
              npm audit fix --audit-level=critical --force
              npm audit --audit-level=critical

  scan-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run: 
           name: Analyze Back-end
           command: |
              cd backend
              npm install
              npm update mkdirp --depth 2
              npm update path-parse --depth 3 
              npm update kind-of --depth 10
              npm install --save-dev webpack@5.73.0
              npm audit fix --audit-level=critical --force
              npm audit --audit-level=critical            
               


      # Checkout code from git
      # Restore from cache
      # Your job code here
      
       
      # Checkout code from git
      # Restore from cache
      # Your job code here
            


workflows:
  default:
    jobs:
      - build-frontend
      - build-backend
      - test-frontend:
          requires: [build-frontend]
      - test-backend:
          requires: [build-backend]
      - scan-backend:
          requires: [build-backend]
      - scan-frontend:
          requires: [build-frontend]